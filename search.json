[{"path":"https://vbfelix.github.io/relper/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Vinícius Basseto Félix Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vbfelix.github.io/relper/articles/as_functions.html","id":"as_num","dir":"Articles","previous_headings":"","what":"as_num","title":"as_ functions","text":"goal as_num version .numeric, input string number marks, “10.000,02”.","code":"as_num(\"123.456,78\") #> [1] 123456.8"},{"path":"https://vbfelix.github.io/relper/articles/as_functions.html","id":"as_perc","dir":"Articles","previous_headings":"","what":"as_perc","title":"as_ functions","text":"goal as_perc compute number percentage. default function just multiply values 100. set argument sum TRUE function divide values total multiply 100.","code":"mtcars %>%    count(vs,am) %>%    mutate(prop = n/sum(n)) %>%    mutate(perc = as_perc(prop)) #>   vs am  n    prop   perc #> 1  0  0 12 0.37500 37.500 #> 2  0  1  6 0.18750 18.750 #> 3  1  0  7 0.21875 21.875 #> 4  1  1  7 0.21875 21.875 mtcars %>%    count(vs,am) %>%    mutate(perc = as_perc(n,sum = TRUE)) #>   vs am  n   perc #> 1  0  0 12 37.500 #> 2  0  1  6 18.750 #> 3  1  0  7 21.875 #> 4  1  1  7 21.875"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_acf","dir":"Articles","previous_headings":"","what":"calc_acf","title":"calc_ functions","text":"goal calc_acf compute auto-correlation function, given : \\[\\frac{\\sum_\\limits{t = k+1}^{n}(x_t - \\bar{x})(x_{t-k} - \\bar{x})}{\\sum_\\limits{t = 1}^{n} (x_t - \\bar{x})^2 },\\] : \\(x_t\\) time series length \\(n\\); \\(x_{t-k}\\) shifted time series \\(k\\) units time; \\(\\bar{x}\\) average time series. pass second vector argument y cross-correlation computed instead: \\[\\frac{n \\left( \\sum_\\limits{t = 1}^{n}x_ty_t \\right) - \\left[\\left(\\sum_\\limits{t = 1}^{n}x_t \\right) \\left(\\sum_\\limits{t = 1}^{n}y_t\\right) \\right]}{\\sqrt{\\left[n \\left( \\sum_\\limits{t = 1}^{n}x_t^2 \\right) - \\left( \\sum_\\limits{t = 1}^{n}x_t \\right)^2\\right]\\left[n \\left( \\sum_\\limits{t = 1}^{n}y_t^2 \\right) - \\left( \\sum_\\limits{t = 1}^{n}y_t \\right)^2\\right]}},\\] : \\(x_t\\) time series length \\(n\\); \\(y_t\\) time series length \\(n\\).","code":"x <- rnorm(100)  calc_acf(x) #> # A tibble: 21 × 2 #>        acf   lag #>      <dbl> <dbl> #>  1  1          0 #>  2 -0.0894     1 #>  3  0.151      2 #>  4 -0.0164     3 #>  5 -0.0683     4 #>  6  0.160      5 #>  7 -0.173      6 #>  8  0.0972     7 #>  9  0.0433     8 #> 10  0.0670     9 #> # … with 11 more rows y <- rexp(100)  calc_acf(x,y) #> # A tibble: 33 × 2 #>        ccf   lag #>      <dbl> <dbl> #>  1 -0.0970   -16 #>  2  0.118    -15 #>  3  0.108    -14 #>  4  0.113    -13 #>  5 -0.0464   -12 #>  6 -0.0256   -11 #>  7 -0.0286   -10 #>  8 -0.0185    -9 #>  9  0.0277    -8 #> 10 -0.0324    -7 #> # … with 23 more rows"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_auc","dir":"Articles","previous_headings":"","what":"calc_auc","title":"calc_ functions","text":"goal calc_auc compute area curve (AUC).   can define argument limits get AUC limit.","code":"x <- seq(-3,3,l = 100)  y <- dnorm(x) #from min to max of x range(x) #> [1] -3  3  calc_auc(x,y) #> [1] 0.9972835 #from -2 to 2 calc_auc(x,y,limits = c(-2,2)) #> [1] 0.9544345 #from -1 to 1 calc_auc(x,y,limits = c(-1,1)) #> [1] 0.6825416"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_corr","dir":"Articles","previous_headings":"","what":"calc_corr","title":"calc_ functions","text":"goal calc_corr compute Pearson, Kendall Spearman correlation coefficients.","code":"x <- rnorm(100)  y <- rnorm(100)  calc_corr(x,y) #> # A tibble: 1 × 3 #>   pearson kendall spearman #>     <dbl>   <dbl>    <dbl> #> 1  -0.164 -0.0885   -0.128"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_cramers_v","dir":"Articles","previous_headings":"","what":"calc_cramers_v","title":"calc_ functions","text":"goal calc_cramers_v compute Cramer’s V, given : \\[\\sqrt{\\frac{X^2}{n\\min(r-1,c-1)}},\\] : \\(X^2\\) chi-square statistic; \\(n\\) sample size; \\(r\\) number rows contingency table; \\(c\\) number columns contingency table.","code":"m <- matrix(c(12, 5, 7, 7), ncol = 2)  chi_square <- chisq.test(m)  calc_cramers_v(chi_square) #> [1] 0.1438099"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_cv","dir":"Articles","previous_headings":"","what":"calc_cv","title":"calc_ functions","text":"goal calc_cv compute coefficient variation (CV), given : \\[\\frac{s}{\\bar{x}},\\] : \\(s\\) sample standard deviation; \\(\\bar{x}\\) sample mean. set argument as_perc TRUE, CV multiplied 100.","code":"set.seed(123);x <- rnorm(100,1)  calc_cv(x) #> [1] 0.84 calc_cv(x,as_perc = TRUE) #> [1] 83.71"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_date_aux","dir":"Articles","previous_headings":"","what":"calc_date_aux","title":"calc_ functions","text":"goal calc_date_aux compute variables derived date, year, month, day, etc. new variables respective date : mon_abb: factor abbreviated name month; mon_lbl: factor complete name month; mon_num: number month; day_num: number day within month; year_num: number year; year_lbl: factor number year; week_num: number complete seven day periods occurred date January 1st, plus one; epiweek_num: US CDC version epidemiological week. Starts Sunday; isoweek_num: week appear ISO 8601 system, uses reoccurring leap week. Starts Monday; wday_abb: factor week day abbreviated name; wday_lbl: factor week day complete name.","code":"dt <- seq(as.Date(\"1910/1/1\"), as.Date(\"1911/1/1\"), \"days\")  df_dt <- data.frame(dt = dt)  calc_date_aux(df_dt,dt) %>% glimpse() #> Rows: 366 #> Columns: 12 #> $ dt          <date> 1910-01-01, 1910-01-02, 1910-01-03, 1910-01-04, 1910-01-0… #> $ mon_abb     <ord> Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan… #> $ mon_lbl     <ord> January, January, January, January, January, January, Janu… #> $ mon_num     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ day_num     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,… #> $ year_num    <dbl> 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910… #> $ year_lbl    <fct> 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910, 1910… #> $ week_num    <dbl> 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3… #> $ epiweek_num <dbl> 52, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, … #> $ isoweek_num <dbl> 52, 52, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3,… #> $ wday_abb    <ord> Sat, Sun, Mon, Tue, Wed, Thu, Fri, Sat, Sun, Mon, Tue, Wed… #> $ wday_lbl    <ord> Saturday, Sunday, Monday, Tuesday, Wednesday, Thursday, Fr…"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_date_diff","dir":"Articles","previous_headings":"","what":"calc_date_diff","title":"calc_ functions","text":"goal calc_date_diff compute difference two dates. , difference day 21/11/2018 01/05/1998 7,509 days. need add constant difference can use argument add.","code":"date1 <- lubridate::dmy(\"01/05/1998\")  date2 <- lubridate::dmy(\"21/11/2018\")  calc_date_diff(date1 = date1,date2 = date2,unit = \"days\") #> [1] 7509 calc_date_diff(date1 = date1,date2 = date2,unit = \"days\",add = 1) #> [1] 7510"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_date_range","dir":"Articles","previous_headings":"","what":"calc_date_range","title":"calc_ functions","text":"goal calc_date_range compute range date vector, create string minimal maximum date.","code":"dt <- seq(as.Date(\"1910/1/1\"), as.Date(\"1911/1/1\"), \"days\")  calc_date_range(dt) #> [1] \"01/01/1910 - 01/01/1911\""},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_geometric_mean","dir":"Articles","previous_headings":"","what":"calc_geometric_mean","title":"calc_ functions","text":"goal calc_geometric_mean compute geometric mean, given : \\[\\sqrt[n]{\\prod\\limits_{=1}^{n}x_i} = \\sqrt[n]{x_1\\times x_2 \\times...\\times x_n},\\] : \\(x_i\\) numeric vector length \\(n\\).","code":"calc_geometric_mean(x) #> Warning in calc_geometric_mean(x): There is at least one value < 0 and that #> cause NaN's when computing the geometric mean. #> Warning in log(x): NaNs produced #> [1] 1.106355"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_harmonic_mean","dir":"Articles","previous_headings":"","what":"calc_harmonic_mean","title":"calc_ functions","text":"goal calc_harmonic_mean compute harmonic mean, given : \\[\\frac{n}{\\sum\\limits_{=1}^{n}\\frac{1}{x_i}},\\] : \\(x_i\\) numeric vector length \\(n\\).","code":"calc_harmonic_mean(x) #> [1] -1.048597"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_mean","dir":"Articles","previous_headings":"","what":"calc_mean","title":"calc_ functions","text":"goal calc_mean compute arithmetic, geometric harmonic mean.","code":"calc_mean(x) #> Warning in relper::calc_geometric_mean(x): There is at least one value < 0 and #> that cause NaN's when computing the geometric mean. #> Warning in log(x): NaNs produced #> # A tibble: 1 × 3 #>   arithmetic geometric harmonic #>        <dbl>     <dbl>    <dbl> #> 1       1.09      1.11    -1.05"},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_mode","dir":"Articles","previous_headings":"","what":"calc_mode","title":"calc_ functions","text":"goal calc_mode compute mode. can see letter “y” one appears , mode variable.","code":"set.seed(123);cat_var <- sample(letters,100,replace = TRUE)  table(cat_var) #> cat_var #>  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  y  z  #>  1  2  5  2  4  3  6  4  5  4  3  3  3  6  4  3  3  3  4  3  4  8  3 10  4 calc_mode(cat_var) #> [1] \"y\""},{"path":"https://vbfelix.github.io/relper/articles/calc_functions.html","id":"calc_peak_density","dir":"Articles","previous_headings":"","what":"calc_peak_density","title":"calc_ functions","text":"goal calc_peak_density compute peak density value numeric value.  Let’s say eant discover value peak density .","code":"calc_peak_density(x) #> [1] 0.8076021 #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead."},{"path":"https://vbfelix.github.io/relper/articles/format_functions.html","id":"format_digit","dir":"Articles","previous_headings":"","what":"format_digit","title":"format_functions","text":"goal format_digit add zero(s) left number. can also set argument digits add zeros.","code":"x <- c(1,4,10,12,100,2000)  format_digit(x) #> [1] \"01\"   \"04\"   \"10\"   \"12\"   \"100\"  \"2000\" format_digit(x,digits = 4) #> [1] \"0001\" \"0004\" \"0010\" \"0012\" \"0100\" \"2000\""},{"path":"https://vbfelix.github.io/relper/articles/format_functions.html","id":"format_num","dir":"Articles","previous_headings":"","what":"format_num","title":"format_functions","text":"goal format_num add markers number. can also change markers characters choice. Also, Brazilian like , made argument make lives easier.","code":"format_num(12345.67) #> [1] \"12,345.67\" format_num(12345.67,decimal_mark = \"*\",thousand_mark = \"#\") #> [1] \"12#345*67\" format_num(12345.67,br_mark = TRUE) #> [1] \"12.345,67\""},{"path":"https://vbfelix.github.io/relper/articles/format_functions.html","id":"format_scale","dir":"Articles","previous_headings":"","what":"format_scale","title":"format_functions","text":"goal format_scale reescale variable, given : \\[y_i = (y_{\\max} - y_{\\min}) * \\left[\\frac{x_i - \\min(x_i)}{\\max(x)-\\min(x)} \\right] + y_{\\min},\\] : \\(y_i\\) reescaled numeric vector; \\(y_{\\max}\\) new maximum value, reescale; \\(y_{\\min}\\) new minimum value, reescale; \\(x_i\\) original numeric vector; \\(\\min(x_i)\\) original minimum value \\(x_i\\); \\(\\max(x_i)\\) original maximum value \\(x_i\\). default vector reescaled 0 1 new minimum maximum values.  can also change range new scale.","code":"x <- seq(-3,3,l = 10)  x #>  [1] -3.0000000 -2.3333333 -1.6666667 -1.0000000 -0.3333333  0.3333333 #>  [7]  1.0000000  1.6666667  2.3333333  3.0000000  y <- format_scale(x)  y #>  [1] 0.0000000 0.1111111 0.2222222 0.3333333 0.4444444 0.5555556 0.6666667 #>  [8] 0.7777778 0.8888889 1.0000000 z <- format_scale(x,new_min = 25,new_max = 100)"},{"path":"https://vbfelix.github.io/relper/articles/format_functions.html","id":"format_p_value","dir":"Articles","previous_headings":"","what":"format_p_value","title":"format_functions","text":"goal format_p_value change p value, considering lower bound value valor smaller , let’s say 0.001, p value changed <0.001","code":"format_p_value(c(.001,.00000001),lower_bound = 0.001) #> [1] \"0.0010\" \"<0.001\""},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_date","dir":"Articles","previous_headings":"","what":"is_date","title":"is_ functions","text":"goal is_date check value date.","code":"is_date(Sys.time()) #> [1] FALSE  is_date(Sys.Date()) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_datetime","dir":"Articles","previous_headings":"","what":"is_datetime","title":"is_ functions","text":"goal is_datetime check value datetime.","code":"is_date(Sys.time()) #> [1] FALSE  is_date(Sys.Date()) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_even","dir":"Articles","previous_headings":"","what":"is_even","title":"is_ functions","text":"goal is_even check value even.","code":"is_even(1) #> [1] FALSE  is_even(2) #> [1] TRUE  is_even(1.1) #> [1] FALSE  is_even(2.2) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_integer","dir":"Articles","previous_headings":"","what":"is_integer","title":"is_ functions","text":"goal is_integer check value integer, considering variable type value.","code":"is_integer(1.1) #> [1] FALSE  is_integer(1) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_negative","dir":"Articles","previous_headings":"","what":"is_negative","title":"is_ functions","text":"goal is_negative check value negative.","code":"is_negative(1) #> [1] FALSE  is_negative(-1) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_odd","dir":"Articles","previous_headings":"","what":"is_odd","title":"is_ functions","text":"goal is_odd check value odd.","code":"is_odd(1) #> [1] TRUE  is_odd(2) #> [1] FALSE  is_odd(1.1) #> [1] TRUE  is_odd(2.2) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_outlier","dir":"Articles","previous_headings":"","what":"is_outlier","title":"is_ functions","text":"goal is_outlier check value outlier, using boxplot outlier criteria, given : \\[ [x < (Q_1 - 1.5 * IQR)] \\quad  |  \\quad [x > (Q_3 - 1.5 * IQR)],\\] : \\(Q_1\\) first quartile; \\(Q_3\\) third quartile; \\(IQR\\) interquartile range, e.g., \\(Q_3-Q_1\\).","code":"x <- c(1,2,3,5,7,8,12,100)  is_outlier(x) #> [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_positive","dir":"Articles","previous_headings":"","what":"is_positive","title":"is_ functions","text":"goal is_positive check value positive.","code":"is_positive(1) #> [1] TRUE  is_positive(-1) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/articles/is_functions.html","id":"is_string","dir":"Articles","previous_headings":"","what":"is_string","title":"is_ functions","text":"goal is_string check value string, character factor.","code":"is_string(\"A\") #> [1] TRUE  is_string(factor(\"A\")) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/articles/isnot_functions.html","id":"isnot_in","dir":"Articles","previous_headings":"","what":"isnot_in","title":"isnot_ functions","text":"goal isnot_in check variable contained, !(x %% y).","code":"isnot_in(\"a\", letters) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/articles/isnot_functions.html","id":"isnot_na","dir":"Articles","previous_headings":"","what":"isnot_na","title":"isnot_ functions","text":"goal isnot_na check variable NA !.na(x).","code":"isnot_na(2) #> [1] TRUE  isnot_na(NA) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/articles/others_functions.html","id":"cut_by_quantile","dir":"Articles","previous_headings":"","what":"cut_by_quantile","title":"Others functions","text":"goal cut_by_quantile cut numeric variable set quantiles.","code":"x <- rnorm(100)  table(cut_by_quantile(x,q = seq(0,1,by = .25))) #>  #>   [-2.39,-0.684] (-0.684,0.00211]  (0.00211,0.715]     (0.715,3.82]  #>               25               25               25               25"},{"path":"https://vbfelix.github.io/relper/articles/others_functions.html","id":"expand_grid_unique","dir":"Articles","previous_headings":"","what":"expand_grid_unique","title":"Others functions","text":"goal expand_grid_unique create grid combination two variables, repetition. can also set argument include_equals TRUE equal pairs kept.","code":"expand_grid_unique(x = 1:3,y = 1:3) #> # A tibble: 3 × 2 #>      V1    V2 #>   <int> <int> #> 1     1     2 #> 2     1     3 #> 3     2     3 expand_grid_unique(x = 1:3,y = 1:3, include_equals = TRUE) #> # A tibble: 6 × 2 #>      V1    V2 #>   <int> <int> #> 1     1     1 #> 2     1     2 #> 3     1     3 #> 4     2     2 #> 5     2     3 #> 6     3     3"},{"path":"https://vbfelix.github.io/relper/articles/others_functions.html","id":"obj_to_string","dir":"Articles","previous_headings":"","what":"obj_to_string","title":"Others functions","text":"goal obj_to_string return name R object string.","code":"x <- c(1,2,3,5,7,8,12,100)  obj_to_string(x) #> [1] \"x\""},{"path":"https://vbfelix.github.io/relper/articles/others_functions.html","id":"row_number_unique","dir":"Articles","previous_headings":"","what":"row_number_unique","title":"Others functions","text":"goal row_number_unique get row number considering unique values variable.","code":"mtcars %>%    select(vs,gear) %>%    slice(1:10) %>%    group_by(vs) %>%    mutate(gear_position = row_number_unique(gear)) #> # A tibble: 10 × 3 #> # Groups:   vs [2] #>       vs  gear gear_position #>    <dbl> <dbl>         <int> #>  1     0     4             1 #>  2     0     4             1 #>  3     1     4             1 #>  4     1     3             2 #>  5     0     3             2 #>  6     1     3             2 #>  7     0     3             2 #>  8     1     4             2 #>  9     1     4             2 #> 10     1     4             2"},{"path":"https://vbfelix.github.io/relper/articles/others_functions.html","id":"rpearson","dir":"Articles","previous_headings":"","what":"rpearson","title":"Others functions","text":"goal rpearson simulate data, two variables linear correlated normal distribution, using pearson correlation coefficient argument.","code":"set.seed(123);df <- rpearson(n = 100, pearson = .8, mean = 3) #> 100 observations of x and y were simulated with:  #>  - Mean = 3  #>  - SD = 1  #>  - Linear correlation coefficient = 0.8  #>  - Simulation tolerance =  0.1  #>  Resulting in a linear correlation coefficient = 0.7709791  df %>%    ggplot(aes(x,y))+   geom_point()+   geom_smooth(method = \"lm\", se = FALSE) #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_flip_y_title","dir":"Articles","previous_headings":"","what":"plt_flip_y_title","title":"plt_ functions","text":"goal plt_flip_y_title flip title y axis, read horizontally.","code":"plot + plt_flip_y_title"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_identity_line","dir":"Articles","previous_headings":"","what":"plt_identity_line","title":"plt_ functions","text":"goal plt_identity_line add identity line scatter plot.","code":"plot + plt_identity_line(color = \"red\")"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_no_background","dir":"Articles","previous_headings":"","what":"plt_no_background","title":"plt_ functions","text":"goal plt_no_background remove background.","code":"plot + plt_no_background"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_no_labels","dir":"Articles","previous_headings":"","what":"plt_no_labels","title":"plt_ functions","text":"goal plt_no_labels remove labels.","code":"plot + plt_no_labels"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_scale_auto","dir":"Articles","previous_headings":"","what":"plt_scale_auto","title":"plt_ functions","text":"goal plt_scale_auto add automatic scale.","code":"plot + plt_scale_auto(axis = \"x\",n_breaks = 5) plot +   plt_scale_auto(axis = \"x\",n_breaks = 5)+   plt_scale_auto(axis = \"y\",n_breaks = 3)"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_theme_map","dir":"Articles","previous_headings":"","what":"plt_theme_map","title":"plt_ functions","text":"goal plt_theme_map add theme appropriate map.","code":"plot + plt_theme_map()"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_theme_x","dir":"Articles","previous_headings":"","what":"plt_theme_x","title":"plt_ functions","text":"goal plt_theme_x remove major minor grid lines y axis.","code":"plot + plt_theme_x()"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_theme_xy","dir":"Articles","previous_headings":"","what":"plt_theme_xy","title":"plt_ functions","text":"goal plt_theme_xy remove minor grid lines x y axis.","code":"plot + plt_theme_xy()"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_theme_y","dir":"Articles","previous_headings":"","what":"plt_theme_y","title":"plt_ functions","text":"goal plt_theme_y remove major minor grid lines x axis.","code":"plot + plt_theme_y()"},{"path":"https://vbfelix.github.io/relper/articles/plt_functions.html","id":"plt_water_mark","dir":"Articles","previous_headings":"","what":"plt_water_mark","title":"plt_ functions","text":"goal plt_water_mark add image watermark ggplot2 object.","code":"plot + plt_water_mark(vfx_watermark)"},{"path":"https://vbfelix.github.io/relper/articles/stat_functions.html","id":"stat_two_cat","dir":"Articles","previous_headings":"","what":"stat_two_cat","title":"stat_functions","text":"goal stat_two_cat create frequency table chi-square statistic, p-value Cramer’s V. Result function stat_two_cat.","code":"mtcars %>%   mutate(vs = paste0(\"vs = \",vs)) %>%   stat_two_cat(grp_var = vs,vars = c(am,cyl))"},{"path":"https://vbfelix.github.io/relper/articles/stat_functions.html","id":"stat_two_num","dir":"Articles","previous_headings":"","what":"stat_two_num","title":"stat_functions","text":"goal stat_two_num create summary table comparing one numerical variables two groups. Result function stat_two_num.","code":"stat_two_num(   df = df,   grp_var = grp_var,   num_vars = c(num_var1,num_var2,num_var3),   method = c(\"auto\") )"},{"path":"https://vbfelix.github.io/relper/articles/str_functions.html","id":"str_clean","dir":"Articles","previous_headings":"","what":"str_clean","title":"str_ functions","text":"goal str_clean remove punctuation /accent.","code":"string <- \"a..;éâ...íõ\"  #remove only punctuation str_clean(string,remove_accent = FALSE,remove_punct = TRUE) #> [1] \"aéâíõ\"  #remove only accent str_clean(string,remove_accent = TRUE,remove_punct = FALSE) #> [1] \"a..;ea...io\"  #remove both str_clean(string) #> [1] \"aeaio\""},{"path":"https://vbfelix.github.io/relper/articles/str_functions.html","id":"str_keep","dir":"Articles","previous_headings":"","what":"str_keep","title":"str_ functions","text":"goal str_keep keep type character string.","code":"string <- \"1Aa45Z89$$%#\"  str_keep(string,keep = \"text\") #> [1] \"AaZ\"  str_keep(string,keep = \"numbers\") #> [1] \"14589\"  str_keep(string,keep = \"special\") #> [1] \"$$%#\""},{"path":"https://vbfelix.github.io/relper/articles/str_functions.html","id":"str_select","dir":"Articles","previous_headings":"","what":"str_select","title":"str_ functions","text":"goal str_select select part string, , patterns.","code":"string <- \"example text STRING1 TARGET STRING2 example text\"  #Select a string, before a pattern str_select(string,before = \"STRING2\") #> [1] \"example text STRING1 TARGET \"  #Select a string, after a pattern str_select(string,after = \"STRING1\") #> [1] \" TARGET STRING2 example text\"  #Select a string, between two patterns str_select(string,\"STRING1\",\"STRING2\") #> [1] \"TARGET\""},{"path":"https://vbfelix.github.io/relper/articles/str_functions.html","id":"str_to_abb","dir":"Articles","previous_headings":"","what":"str_to_abb","title":"str_ functions","text":"goal str_to_abb apply uppercase strings number characters lower argument n_abb (default = 3).","code":"abcde_string <- c(\"aaaaa\",\"bb\",\"ccc\",\"dddd\")  str_to_abb(abcde_string,n_abb = 3) #> [1] \"Aaaaa\" \"BB\"    \"CCC\"   \"Dddd\""},{"path":"https://vbfelix.github.io/relper/articles/summary_functions.html","id":"summary_cat","dir":"Articles","previous_headings":"","what":"summary_cat","title":"summary_ functions","text":"goal summary_cat summarize categorical variables.","code":"x <- c(sample(letters,100,replace = TRUE),NA)  summary_cat(x) #> Warning in calc_mode(x[relper::isnot_na(x)]): The computed mode has ties, more #> than one result will be provided. #> # A tibble: 3 × 5 #>       n    na blank_space n_distinct mode  #>   <int> <int>       <int>      <int> <chr> #> 1   101     1           0         26 f     #> 2   101     1           0         26 s     #> 3   101     1           0         26 q"},{"path":"https://vbfelix.github.io/relper/articles/summary_functions.html","id":"summary_data","dir":"Articles","previous_headings":"","what":"summary_data","title":"summary_ functions","text":"goal summary_data summarize variables dataframe.","code":"summary_data(mtcars) #> [1] \"11 numeric variables.\" #> # A tibble: 11 × 14 #>    var       n    na negative equal_…¹ posit…²   min    p25    p50    p75    max #>    <chr> <int> <int>    <int>    <int>   <int> <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #>  1 am       32     0        0       19      13  0      0      0      1      1    #>  2 carb     32     0        0        0      32  1      2      2      4      8    #>  3 cyl      32     0        0        0      32  4      4      6      8      8    #>  4 disp     32     0        0        0      32 71.1  121.   196.   326    472    #>  5 drat     32     0        0        0      32  2.76   3.08   3.70   3.92   4.93 #>  6 gear     32     0        0        0      32  3      3      4      4      5    #>  7 hp       32     0        0        0      32 52     96.5  123    180    335    #>  8 mpg      32     0        0        0      32 10.4   15.4   19.2   22.8   33.9  #>  9 qsec     32     0        0        0      32 14.5   16.9   17.7   18.9   22.9  #> 10 vs       32     0        0       18      14  0      0      0      1      1    #> 11 wt       32     0        0        0      32  1.51   2.58   3.32   3.61   5.42 #> # … with 3 more variables: mode <dbl>, mean <dbl>, cv <dbl>, and abbreviated #> #   variable names ¹​equal_zero, ²​positive #> [1] \"0 categoric variables.\""},{"path":"https://vbfelix.github.io/relper/articles/summary_functions.html","id":"summary_num","dir":"Articles","previous_headings":"","what":"summary_num","title":"summary_ functions","text":"goal summary_num summarize numeric variables.","code":"x <- c(rnorm(10),NA,10)  summary_num(x) #> # A tibble: 1 × 13 #>       n    na negative equal_zero positive   min    p25   p50   p75   max   mode #>   <int> <int>    <int>      <int>    <int> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1    12     1        5          0        6 -1.37 -0.306 0.412  1.47    10 -0.154 #> # … with 2 more variables: mean <dbl>, cv <dbl>"},{"path":"https://vbfelix.github.io/relper/articles/summary_functions.html","id":"summary_seq","dir":"Articles","previous_headings":"","what":"summary_seq","title":"summary_ functions","text":"goal summary_seq compute number sequential repeated values.","code":"y <- c(1, 1, 1, 2, 2, 2, 2, 3, 4, 5, 6, 7, 1, 1)  summary_seq(y) #> # A tibble: 8 × 2 #>   value num_rep #>   <dbl>   <int> #> 1     1       3 #> 2     2       4 #> 3     3       1 #> 4     4       1 #> 5     5       1 #> 6     6       1 #> 7     7       1 #> 8     1       2"},{"path":"https://vbfelix.github.io/relper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vinícius Félix. Author, maintainer.","code":""},{"path":"https://vbfelix.github.io/relper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Félix V (2023). relper: Miscellaneous Functions. R package version 1.1.0, https://vbfelix.github.io/relper/.","code":"@Manual{,   title = {relper: Miscellaneous Functions},   author = {Vinícius Félix},   year = {2023},   note = {R package version 1.1.0},   url = {https://vbfelix.github.io/relper/}, }"},{"path":"https://vbfelix.github.io/relper/index.html","id":"intro","dir":"","previous_headings":"","what":"Miscellaneous Functions","title":"Miscellaneous Functions","text":"goal relper provide miscellaneous functions assist data cleaning visualization.","code":""},{"path":"https://vbfelix.github.io/relper/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Miscellaneous Functions","text":"can install developer version relper :","code":"remotes::install_github(\"vbfelix/relper\")"},{"path":"https://vbfelix.github.io/relper/reference/as_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce character to numeric — as_num","title":"Coerce character to numeric — as_num","text":"Coerce character vector numeric, :    - Removing thousand separator mark.    - Replacing decimal mark dot.    - Applying function .numeric.","code":""},{"path":"https://vbfelix.github.io/relper/reference/as_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce character to numeric — as_num","text":"","code":"as_num(x, thousand_mark = \"\\\\.\", decimal_mark = \"\\\\,\")"},{"path":"https://vbfelix.github.io/relper/reference/as_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce character to numeric — as_num","text":"x character vector thousand_mark character single value use thousand mark (default = '\\ \\.') decimal_mark character single value use decimal mark (default = '\\ \\,')","code":""},{"path":"https://vbfelix.github.io/relper/reference/as_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce character to numeric — as_num","text":"numeric vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/as_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce character to numeric — as_num","text":"","code":"x <- \"10.000,50\"  as_num(x) #> [1] 10000.5"},{"path":"https://vbfelix.github.io/relper/reference/as_perc.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform value to percentage — as_perc","title":"Transform value to percentage — as_perc","text":"Transform numeric values percentage, :   - Multiplying values 100, sum = FALSE (default).   - Adding values computing percentage, sum = TRUE.","code":""},{"path":"https://vbfelix.github.io/relper/reference/as_perc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform value to percentage — as_perc","text":"","code":"as_perc(x, sum = FALSE)"},{"path":"https://vbfelix.github.io/relper/reference/as_perc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform value to percentage — as_perc","text":"x numeric vector sum boolean value, TRUE function add values compute percentage (default = FALSE)","code":""},{"path":"https://vbfelix.github.io/relper/reference/as_perc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform value to percentage — as_perc","text":"numeric vector x percentage.","code":""},{"path":"https://vbfelix.github.io/relper/reference/as_perc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform value to percentage — as_perc","text":"","code":"#sum = FALSE (default) x <- c(.4,.6) as_perc(x) #> [1] 40 60  #sum = TRUE x <- c(120,180) as_perc(x,sum = TRUE) #> [1] 40 60"},{"path":"https://vbfelix.github.io/relper/reference/calc_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-correlation computation — calc_acf","title":"Auto-correlation computation — calc_acf","text":"Computation auto-correlation function (ACF)  cross-correlation function (CCF), argument 'y' provided.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-correlation computation — calc_acf","text":"","code":"calc_acf(x, y = NULL, ...)"},{"path":"https://vbfelix.github.io/relper/reference/calc_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-correlation computation — calc_acf","text":"x numeric vector y numeric vector (default = NULL), value compute CCF","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-correlation computation — calc_acf","text":"tibble (lag x 2) :  - ACF/CCF.  - lag.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto-correlation computation — calc_acf","text":"","code":"x <- rnorm(100)  calc_acf(x) #> # A tibble: 21 × 2 #>        acf   lag #>      <dbl> <dbl> #>  1  1          0 #>  2  0.0109     1 #>  3 -0.0726     2 #>  4 -0.127      3 #>  5 -0.0461     4 #>  6  0.0326     5 #>  7  0.0358     6 #>  8 -0.0841     7 #>  9  0.0777     8 #> 10  0.0487     9 #> # … with 11 more rows  y <- rexp(100)  calc_acf(x,y) #> # A tibble: 33 × 2 #>         ccf   lag #>       <dbl> <dbl> #>  1  0.00561   -16 #>  2  0.116     -15 #>  3 -0.132     -14 #>  4 -0.0506    -13 #>  5 -0.0792    -12 #>  6 -0.0509    -11 #>  7 -0.161     -10 #>  8  0.00307    -9 #>  9  0.153      -8 #> 10  0.105      -7 #> # … with 23 more rows"},{"path":"https://vbfelix.github.io/relper/reference/calc_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Area under the curve computation — calc_auc","title":"Area under the curve computation — calc_auc","text":"Computation area curve (AUC), linear interpolation.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area under the curve computation — calc_auc","text":"","code":"calc_auc(x, y, limits = NULL)"},{"path":"https://vbfelix.github.io/relper/reference/calc_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area under the curve computation — calc_auc","text":"x numeric vector y numeric vector limits numeric vector length 2 (default = range 'x')","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area under the curve computation — calc_auc","text":"numeric single value computed AUC.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area under the curve computation — calc_auc","text":"","code":"x <- seq(-3,3,l = 100)  y <- dnorm(x)  plot(x,y)   calc_auc(x,y) #> [1] 0.9972835"},{"path":"https://vbfelix.github.io/relper/reference/calc_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation computation — calc_corr","title":"Correlation computation — calc_corr","text":"Computation Pearson, Kendall Spearman correlations coefficients.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation computation — calc_corr","text":"","code":"calc_corr(x, y)"},{"path":"https://vbfelix.github.io/relper/reference/calc_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation computation — calc_corr","text":"x numeric vector y numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation computation — calc_corr","text":"tibble (1x3) computed coefficients.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation computation — calc_corr","text":"","code":"x <- rnorm(100)  y <- rnorm(100)  plot(x,y)   calc_corr(x,y) #> # A tibble: 1 × 3 #>   pearson kendall spearman #>     <dbl>   <dbl>    <dbl> #> 1   0.142  0.0913    0.139"},{"path":"https://vbfelix.github.io/relper/reference/calc_cramers_v.html","id":null,"dir":"Reference","previous_headings":"","what":"Cramer's V computation — calc_cramers_v","title":"Cramer's V computation — calc_cramers_v","text":"Computation Cramer's V chi-square test.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_cramers_v.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cramer's V computation — calc_cramers_v","text":"","code":"calc_cramers_v(chi_square)"},{"path":"https://vbfelix.github.io/relper/reference/calc_cramers_v.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cramer's V computation — calc_cramers_v","text":"chi_square object application function chisq.test","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_cramers_v.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cramer's V computation — calc_cramers_v","text":"numeric single value computed Cramer's V.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_cramers_v.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cramer's V computation — calc_cramers_v","text":"","code":"x <- matrix(c(12, 5, 7, 7), ncol = 2)  chi_square <- chisq.test(x)  calc_cramers_v(chi_square) #> [1] 0.1438099"},{"path":"https://vbfelix.github.io/relper/reference/calc_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of variation computation — calc_cv","title":"Coefficient of variation computation — calc_cv","text":"Computation coefficient variation (CV).","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of variation computation — calc_cv","text":"","code":"calc_cv(x, as_perc = FALSE)"},{"path":"https://vbfelix.github.io/relper/reference/calc_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of variation computation — calc_cv","text":"x numeric vector as_perc boolean value, TRUE function multiply CV 100 (default = FALSE)","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient of variation computation — calc_cv","text":"numeric single value computed CV.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of variation computation — calc_cv","text":"","code":"x <- rnorm(100,1)  calc_cv(x) #> [1] 0.92"},{"path":"https://vbfelix.github.io/relper/reference/calc_date_aux.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliar date variables computation — calc_date_aux","title":"Auxiliar date variables computation — calc_date_aux","text":"Computation auxiliar date variables:   - mon_abb: factor abbreviated name month;   - mon_lbl: factor complete name month;   - mon_num: number month;   - day_num: number day within month;   - year_num: number year;   - year_lbl: factor number year;   - week_num: number complete seven day periods occurred date January 1st, plus one;   - epiweek_num: US CDC version epidemiological week. Starts Sunday;   - isoweek_num:  week appear ISO 8601 system, uses reoccurring leap week. Starts Monday;   - wday_abb: factor week day abbreviated name;   - wday_lbl: factor week day complete name.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_aux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliar date variables computation — calc_date_aux","text":"","code":"calc_date_aux(df, dt_var)"},{"path":"https://vbfelix.github.io/relper/reference/calc_date_aux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliar date variables computation — calc_date_aux","text":"df single data.frame dt_var date variable data.frame","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_aux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auxiliar date variables computation — calc_date_aux","text":"tibble original data new computed variables.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_aux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auxiliar date variables computation — calc_date_aux","text":"","code":"df <- data.frame(dt = lubridate::dmy(\"01/01/01\"))  dplyr::glimpse(calc_date_aux(df,dt)) #> Rows: 1 #> Columns: 12 #> $ dt          <date> 2001-01-01 #> $ mon_abb     <ord> Jan #> $ mon_lbl     <ord> January #> $ mon_num     <dbl> 1 #> $ day_num     <int> 1 #> $ year_num    <dbl> 2001 #> $ year_lbl    <fct> 2001 #> $ week_num    <dbl> 1 #> $ epiweek_num <dbl> 1 #> $ isoweek_num <dbl> 1 #> $ wday_abb    <ord> Mon #> $ wday_lbl    <ord> Monday"},{"path":"https://vbfelix.github.io/relper/reference/calc_date_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference between two dates — calc_date_diff","title":"Difference between two dates — calc_date_diff","text":"Computation difference two dates (date2 - date1 + add).","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference between two dates — calc_date_diff","text":"","code":"calc_date_diff(date1, date2, add = 0, unit = \"days\")"},{"path":"https://vbfelix.github.io/relper/reference/calc_date_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference between two dates — calc_date_diff","text":"date1 date single value date2 date single value add numeric single value (default = 0) unit character single value unit date result (secs, mins, hours, days, weeks)","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Difference between two dates — calc_date_diff","text":"numeric single value computed difference two dates.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Difference between two dates — calc_date_diff","text":"","code":"date1 <- lubridate::dmy(\"01/05/1998\")  date2 <- lubridate::dmy(\"21/11/2018\")  calc_date_diff(date1 = date1,date2 = date2,unit = \"days\") #> [1] 7509"},{"path":"https://vbfelix.github.io/relper/reference/calc_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Date range computation — calc_date_range","title":"Date range computation — calc_date_range","text":"computation range date vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date range computation — calc_date_range","text":"","code":"calc_date_range(x)"},{"path":"https://vbfelix.github.io/relper/reference/calc_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date range computation — calc_date_range","text":"x date vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date range computation — calc_date_range","text":"character single value format \"min(x) - max(x)\".","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_date_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date range computation — calc_date_range","text":"","code":"x <- seq(as.Date(\"1910/1/1\"), as.Date(\"1911/1/1\"), \"days\")  calc_date_range(x) #> [1] \"01/01/1910 - 01/01/1911\""},{"path":"https://vbfelix.github.io/relper/reference/calc_geometric_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric mean computation — calc_geometric_mean","title":"Geometric mean computation — calc_geometric_mean","text":"Computation geometric mean.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_geometric_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric mean computation — calc_geometric_mean","text":"","code":"calc_geometric_mean(x)"},{"path":"https://vbfelix.github.io/relper/reference/calc_geometric_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric mean computation — calc_geometric_mean","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_geometric_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric mean computation — calc_geometric_mean","text":"numeric single value computed geometric mean.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_geometric_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric mean computation — calc_geometric_mean","text":"","code":"x <- rexp(100,.5)  calc_geometric_mean(x) #> [1] 0.8683613"},{"path":"https://vbfelix.github.io/relper/reference/calc_harmonic_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonic mean computation — calc_harmonic_mean","title":"Harmonic mean computation — calc_harmonic_mean","text":"Computation harmonic mean.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_harmonic_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonic mean computation — calc_harmonic_mean","text":"","code":"calc_harmonic_mean(x)"},{"path":"https://vbfelix.github.io/relper/reference/calc_harmonic_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonic mean computation — calc_harmonic_mean","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_harmonic_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonic mean computation — calc_harmonic_mean","text":"numeric single value computed harmonic mean.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_harmonic_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harmonic mean computation — calc_harmonic_mean","text":"","code":"x <- rexp(100,.5)  calc_harmonic_mean(x) #> [1] 0.3095439"},{"path":"https://vbfelix.github.io/relper/reference/calc_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic, geometric and harmonic mean computation — calc_mean","title":"Arithmetic, geometric and harmonic mean computation — calc_mean","text":"Compute arithmetic, geometric harmonic mean.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic, geometric and harmonic mean computation — calc_mean","text":"","code":"calc_mean(x)"},{"path":"https://vbfelix.github.io/relper/reference/calc_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic, geometric and harmonic mean computation — calc_mean","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arithmetic, geometric and harmonic mean computation — calc_mean","text":"tibble (1x3) computed arithmetic, geometric harmonic mean.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arithmetic, geometric and harmonic mean computation — calc_mean","text":"","code":"x <- rexp(10)  calc_mean(x) #> # A tibble: 1 × 3 #>   arithmetic geometric harmonic #>        <dbl>     <dbl>    <dbl> #> 1      0.481     0.297    0.103"},{"path":"https://vbfelix.github.io/relper/reference/calc_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Mode computation — calc_mode","title":"Mode computation — calc_mode","text":"Computation mode.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mode computation — calc_mode","text":"","code":"calc_mode(x)"},{"path":"https://vbfelix.github.io/relper/reference/calc_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mode computation — calc_mode","text":"x  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mode computation — calc_mode","text":"vector computed mode(s).","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mode computation — calc_mode","text":"","code":"table(mtcars$cyl) #>  #>  4  6  8  #> 11  7 14   calc_mode(mtcars$cyl) #> [1] 8"},{"path":"https://vbfelix.github.io/relper/reference/calc_peak_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Peak density value computation — calc_peak_density","title":"Peak density value computation — calc_peak_density","text":"Computation peak value, density function gaussian kernel.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_peak_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Peak density value computation — calc_peak_density","text":"","code":"calc_peak_density(x)"},{"path":"https://vbfelix.github.io/relper/reference/calc_peak_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Peak density value computation — calc_peak_density","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_peak_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Peak density value computation — calc_peak_density","text":"numeric single value computed peak density value.","code":""},{"path":"https://vbfelix.github.io/relper/reference/calc_peak_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Peak density value computation — calc_peak_density","text":"","code":"x <- rnorm(100)  plot(density(x))   calc_peak_density(x) #> [1] -0.03146087"},{"path":"https://vbfelix.github.io/relper/reference/cut_by_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric vector to factor — cut_by_quantile","title":"Convert numeric vector to factor — cut_by_quantile","text":"Divides range numeric vector quantiles provided ('q').","code":""},{"path":"https://vbfelix.github.io/relper/reference/cut_by_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric vector to factor — cut_by_quantile","text":"","code":"cut_by_quantile(x, q = seq(0, 1, by = 0.2), ...)"},{"path":"https://vbfelix.github.io/relper/reference/cut_by_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric vector to factor — cut_by_quantile","text":"x numeric vector q numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/cut_by_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric vector to factor — cut_by_quantile","text":"factor vector interval range quantiles.","code":""},{"path":"https://vbfelix.github.io/relper/reference/cut_by_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert numeric vector to factor — cut_by_quantile","text":"","code":"x <- rnorm(10)  cut_by_quantile(x) #>  [1] (0.0954,2.52]   (-0.686,-0.37]  (-0.37,-0.274]  (-0.274,0.0954] #>  [5] [-1.61,-0.686]  (0.0954,2.52]   (-0.686,-0.37]  (-0.37,-0.274]  #>  [9] [-1.61,-0.686]  (-0.274,0.0954] #> 5 Levels: [-1.61,-0.686] (-0.686,-0.37] (-0.37,-0.274] ... (0.0954,2.52]"},{"path":"https://vbfelix.github.io/relper/reference/expand_grid_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"All combinations of inputs without repetitions — expand_grid_unique","title":"All combinations of inputs without repetitions — expand_grid_unique","text":"Create data frame combinations supplied vectors,  without considering repetitions.","code":""},{"path":"https://vbfelix.github.io/relper/reference/expand_grid_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All combinations of inputs without repetitions — expand_grid_unique","text":"","code":"expand_grid_unique(x, y, include_equals = FALSE)"},{"path":"https://vbfelix.github.io/relper/reference/expand_grid_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All combinations of inputs without repetitions — expand_grid_unique","text":"x  vector y  vector include_equals boolean value, TRUE function ignore equal pairs (default = FALSE)","code":""},{"path":"https://vbfelix.github.io/relper/reference/expand_grid_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All combinations of inputs without repetitions — expand_grid_unique","text":"tibble combinations x y.","code":""},{"path":"https://vbfelix.github.io/relper/reference/expand_grid_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All combinations of inputs without repetitions — expand_grid_unique","text":"","code":"expand_grid_unique(x = 1:3,y = 1:3) #> # A tibble: 3 × 2 #>      V1    V2 #>   <int> <int> #> 1     1     2 #> 2     1     3 #> 3     2     3  expand_grid_unique(x = 1:3,y = 1:3,include_equals = TRUE) #> # A tibble: 6 × 2 #>      V1    V2 #>   <int> <int> #> 1     1     1 #> 2     1     2 #> 3     1     3 #> 4     2     2 #> 5     2     3 #> 6     3     3"},{"path":"https://vbfelix.github.io/relper/reference/format_digit.html","id":null,"dir":"Reference","previous_headings":"","what":"Format value to complete with zeroes to the left — format_digit","title":"Format value to complete with zeroes to the left — format_digit","text":"Format value complete zeroes left certain size,  e.g., considering size 2: 1 -> \"01\".","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format value to complete with zeroes to the left — format_digit","text":"","code":"format_digit(x, digits = 2)"},{"path":"https://vbfelix.github.io/relper/reference/format_digit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format value to complete with zeroes to the left — format_digit","text":"x numeric vector digits numeric integer single value (default = 2), number length add zeroes","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_digit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format value to complete with zeroes to the left — format_digit","text":"character vector zeroes added left achieve desired size.","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_digit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format value to complete with zeroes to the left — format_digit","text":"","code":"x <- c(1,4,10,12)  format_digit(x) #> [1] \"01\" \"04\" \"10\" \"12\""},{"path":"https://vbfelix.github.io/relper/reference/format_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Format numeric value to add marks — format_num","title":"Format numeric value to add marks — format_num","text":"Format value add thousand decimal mark.","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format numeric value to add marks — format_num","text":"","code":"format_num(   x,   digits = 2,   decimal_mark = \".\",   thousand_mark = \",\",   br_mark = FALSE )"},{"path":"https://vbfelix.github.io/relper/reference/format_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format numeric value to add marks — format_num","text":"x numeric vector decimal_mark character single value use decimal mark (default = '.') thousand_mark character single value use thousand mark (default = ',') br_mark boolean value, TRUE function set decimal_mark = ',' thousand_mark = '.' (default = FALSE)","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format numeric value to add marks — format_num","text":"character vector formatted vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format numeric value to add marks — format_num","text":"","code":"format_num(12345.67) #> [1] \"12,345.67\""},{"path":"https://vbfelix.github.io/relper/reference/format_p_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Format p value — format_p_value","title":"Format p value — format_p_value","text":"Format p value","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_p_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format p value — format_p_value","text":"","code":"format_p_value(p_value, lower_bound = NULL)"},{"path":"https://vbfelix.github.io/relper/reference/format_p_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format p value — format_p_value","text":"p_value numeric vector lower_bound numeric single value (default = NULL), lower bound","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_p_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format p value — format_p_value","text":"characther vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_p_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format p value — format_p_value","text":"","code":"format_p_value(c(.001,.00000001),lower_bound = 0.001) #> [1] \"0.0010\" \"<0.001\""},{"path":"https://vbfelix.github.io/relper/reference/format_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale data — format_scale","title":"Rescale data — format_scale","text":"Rescale data new range.","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale data — format_scale","text":"","code":"format_scale(x, new_min = 0, new_max = 1)"},{"path":"https://vbfelix.github.io/relper/reference/format_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale data — format_scale","text":"x numeric vector new_min numeric single value (default = 0), new minimum value new_max numeric single value (default = 1), new maximum value","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale data — format_scale","text":"numeric vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/format_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale data — format_scale","text":"","code":"x <- seq(-3,3,l = 100)  range(x) #> [1] -3  3  y <- format_scale(x)  range(y) #> [1] 0 1  plot(x,y)"},{"path":"https://vbfelix.github.io/relper/reference/is_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for a date variable — is_date","title":"Conditional check for a date variable — is_date","text":"Return TRUE vector date.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for a date variable — is_date","text":"","code":"is_date(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for a date variable — is_date","text":"x  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for a date variable — is_date","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for a date variable — is_date","text":"","code":"is_date(Sys.time()) #> [1] FALSE  is_date(Sys.Date()) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/reference/is_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for a datetime variable — is_datetime","title":"Conditional check for a datetime variable — is_datetime","text":"Return TRUE vector datetime.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for a datetime variable — is_datetime","text":"","code":"is_datetime(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for a datetime variable — is_datetime","text":"x  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for a datetime variable — is_datetime","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for a datetime variable — is_datetime","text":"","code":"is_datetime(Sys.time()) #> [1] TRUE  is_datetime(Sys.Date()) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/reference/is_even.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for an even value — is_even","title":"Conditional check for an even value — is_even","text":"Return TRUE value even.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_even.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for an even value — is_even","text":"","code":"is_even(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_even.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for an even value — is_even","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_even.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for an even value — is_even","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_even.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for an even value — is_even","text":"","code":"is_even(4) #> [1] TRUE  is_even(3) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/reference/is_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for an integer value — is_integer","title":"Conditional check for an integer value — is_integer","text":"Return TRUE value integer,  considering variable type value .","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for an integer value — is_integer","text":"","code":"is_integer(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for an integer value — is_integer","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for an integer value — is_integer","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_integer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for an integer value — is_integer","text":"","code":"is_integer(1) #> [1] TRUE  is_integer(1.1) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/reference/is_negative.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for a negative value — is_negative","title":"Conditional check for a negative value — is_negative","text":"Return TRUE value negative.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_negative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for a negative value — is_negative","text":"","code":"is_negative(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_negative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for a negative value — is_negative","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_negative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for a negative value — is_negative","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_negative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for a negative value — is_negative","text":"","code":"is_negative(4) #> [1] FALSE  is_negative(-4) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/reference/is_odd.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for an odd value — is_odd","title":"Conditional check for an odd value — is_odd","text":"Return TRUE value odd.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_odd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for an odd value — is_odd","text":"","code":"is_odd(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_odd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for an odd value — is_odd","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_odd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for an odd value — is_odd","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_odd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for an odd value — is_odd","text":"","code":"is_odd(4) #> [1] FALSE  is_odd(3) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/reference/is_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for an outlier value — is_outlier","title":"Conditional check for an outlier value — is_outlier","text":"Return TRUE value outlier (boxplot criteria).","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for an outlier value — is_outlier","text":"","code":"is_outlier(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for an outlier value — is_outlier","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for an outlier value — is_outlier","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for an outlier value — is_outlier","text":"","code":"x <- c(rnorm(10),10)  x #>  [1]  0.46417049 -0.52435874 -1.46484067 -0.06986285  0.41358729  0.85175393 #>  [7] -0.57099332 -1.37904498  1.28317569  1.70848748 10.00000000  is_outlier(x) #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE"},{"path":"https://vbfelix.github.io/relper/reference/is_positive.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for a positive value — is_positive","title":"Conditional check for a positive value — is_positive","text":"Return TRUE value positive.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_positive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for a positive value — is_positive","text":"","code":"is_positive(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_positive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for a positive value — is_positive","text":"x numeric vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_positive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for a positive value — is_positive","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_positive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for a positive value — is_positive","text":"","code":"is_positive(4) #> [1] TRUE  is_positive(-4) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/reference/is_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check for an string value — is_string","title":"Conditional check for an string value — is_string","text":"Return TRUE value string (character factor).","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check for an string value — is_string","text":"","code":"is_string(x)"},{"path":"https://vbfelix.github.io/relper/reference/is_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check for an string value — is_string","text":"x  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check for an string value — is_string","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/is_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check for an string value — is_string","text":"","code":"is_string(\"A\") #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/reference/isnot_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check if a value is not contained in a vector — isnot_in","title":"Conditional check if a value is not contained in a vector — isnot_in","text":"Return TRUE x contained y, opposite %%.","code":""},{"path":"https://vbfelix.github.io/relper/reference/isnot_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check if a value is not contained in a vector — isnot_in","text":"","code":"isnot_in(x, y)"},{"path":"https://vbfelix.github.io/relper/reference/isnot_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check if a value is not contained in a vector — isnot_in","text":"x  vector y  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/isnot_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check if a value is not contained in a vector — isnot_in","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/isnot_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check if a value is not contained in a vector — isnot_in","text":"","code":"isnot_in(\"a\", letters) #> [1] FALSE  isnot_in(\"1\", letters) #> [1] TRUE"},{"path":"https://vbfelix.github.io/relper/reference/isnot_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional check if a value is not a NA — isnot_na","title":"Conditional check if a value is not a NA — isnot_na","text":"Return TRUE value NA.","code":""},{"path":"https://vbfelix.github.io/relper/reference/isnot_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional check if a value is not a NA — isnot_na","text":"","code":"isnot_na(x)"},{"path":"https://vbfelix.github.io/relper/reference/isnot_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional check if a value is not a NA — isnot_na","text":"x  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/isnot_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional check if a value is not a NA — isnot_na","text":"boolean vector return condition check.","code":""},{"path":"https://vbfelix.github.io/relper/reference/isnot_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional check if a value is not a NA — isnot_na","text":"","code":"isnot_na(2) #> [1] TRUE  isnot_na(NA) #> [1] FALSE"},{"path":"https://vbfelix.github.io/relper/reference/obj_to_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an object name as a string — obj_to_string","title":"Return an object name as a string — obj_to_string","text":"Return object name string.","code":""},{"path":"https://vbfelix.github.io/relper/reference/obj_to_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an object name as a string — obj_to_string","text":"","code":"obj_to_string(x)"},{"path":"https://vbfelix.github.io/relper/reference/obj_to_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an object name as a string — obj_to_string","text":"x R object","code":""},{"path":"https://vbfelix.github.io/relper/reference/obj_to_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return an object name as a string — obj_to_string","text":"character single value name R object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/obj_to_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return an object name as a string — obj_to_string","text":"","code":"x <- rnorm(100)  obj_to_string(x) #> [1] \"x\""},{"path":"https://vbfelix.github.io/relper/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://vbfelix.github.io/relper/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://vbfelix.github.io/relper/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://vbfelix.github.io/relper/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_flip_y_title.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: Flip y axis title — plt_flip_y_title","title":"ggplot2: Flip y axis title — plt_flip_y_title","text":"y axis title horizontal rotation.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_flip_y_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: Flip y axis title — plt_flip_y_title","text":"","code":"plt_flip_y_title"},{"path":"https://vbfelix.github.io/relper/reference/plt_flip_y_title.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ggplot2: Flip y axis title — plt_flip_y_title","text":"object class theme (inherits gg) length 1.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_flip_y_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: Flip y axis title — plt_flip_y_title","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_flip_y_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: Flip y axis title — plt_flip_y_title","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(hp,drat))+   geom_point()  plot   plot + plt_flip_y_title"},{"path":"https://vbfelix.github.io/relper/reference/plt_identity_line.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: Add a identity line to a scatter plot — plt_identity_line","title":"ggplot2: Add a identity line to a scatter plot — plt_identity_line","text":"Add identity line ggplot2 scatter plot.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_identity_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: Add a identity line to a scatter plot — plt_identity_line","text":"","code":"plt_identity_line(color = \"black\", linetype = \"dashed\")"},{"path":"https://vbfelix.github.io/relper/reference/plt_identity_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: Add a identity line to a scatter plot — plt_identity_line","text":"color character single value (default = 'black'), line color linetype character single value (default = 'dashed'), line type","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_identity_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: Add a identity line to a scatter plot — plt_identity_line","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_identity_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: Add a identity line to a scatter plot — plt_identity_line","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(qsec,mpg))+   geom_point()  plot   plot + plt_identity_line()"},{"path":"https://vbfelix.github.io/relper/reference/plt_no_background.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: Apply a transparent background. — plt_no_background","title":"ggplot2: Apply a transparent background. — plt_no_background","text":"Apply transparent background ggplot2 plot.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_no_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: Apply a transparent background. — plt_no_background","text":"","code":"plt_no_background"},{"path":"https://vbfelix.github.io/relper/reference/plt_no_background.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ggplot2: Apply a transparent background. — plt_no_background","text":"object class theme (inherits gg) length 4.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_no_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: Apply a transparent background. — plt_no_background","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_no_background.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: Apply a transparent background. — plt_no_background","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(hp,drat))+   geom_point()  plot   plot + plt_no_background"},{"path":"https://vbfelix.github.io/relper/reference/plt_no_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: Removal of all labels — plt_no_labels","title":"ggplot2: Removal of all labels — plt_no_labels","text":"Removal labels ggplot2 plot.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_no_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: Removal of all labels — plt_no_labels","text":"","code":"plt_no_labels"},{"path":"https://vbfelix.github.io/relper/reference/plt_no_labels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ggplot2: Removal of all labels — plt_no_labels","text":"object class labels length 6.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_no_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: Removal of all labels — plt_no_labels","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_no_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: Removal of all labels — plt_no_labels","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(hp,drat))+   geom_point()  plot   plot + plt_no_labels"},{"path":"https://vbfelix.github.io/relper/reference/plt_scale_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: Add an automatic scale to a plot — plt_scale_auto","title":"ggplot2: Add an automatic scale to a plot — plt_scale_auto","text":"Create automatic scale ggplot2 plot.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_scale_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: Add an automatic scale to a plot — plt_scale_auto","text":"","code":"plt_scale_auto(   axis = \"x\",   n_breaks = 10,   expand = 0.01,   thousand_mark = \".\",   decimal_mark = \",\" )"},{"path":"https://vbfelix.github.io/relper/reference/plt_scale_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: Add an automatic scale to a plot — plt_scale_auto","text":"axis character single value (default = 'x'), axis scale, must x, y xy n_breaks numeric integer single value (default = 10), number axis breaks expand numeric single value (default = 0.01), expanded margin axis thousand_mark character single value use thousand mark decimal_mark character single value use decimal mark","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_scale_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: Add an automatic scale to a plot — plt_scale_auto","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_scale_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: Add an automatic scale to a plot — plt_scale_auto","text":"","code":"library(ggplot2)  plot <- ggplot(mtcars,aes(hp,drat))+ geom_point()  plot+  plt_scale_auto(\"x\",n_breaks = 10)+  plt_scale_auto(\"y\",n_breaks = 10)"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_map.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: A clean black and white theme for maps — plt_theme_map","title":"ggplot2: A clean black and white theme for maps — plt_theme_map","text":"Removal grid, border, background, title, text ticks ggplot2 plot.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: A clean black and white theme for maps — plt_theme_map","text":"","code":"plt_theme_map(base_size = 14, base_family = \"\", margin = 0.35)"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: A clean black and white theme for maps — plt_theme_map","text":"base_size numeric single value (default = 14), base font size margin numeric single value (default = 0.35), plot margin","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: A clean black and white theme for maps — plt_theme_map","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: A clean black and white theme for maps — plt_theme_map","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(hp,drat))+   geom_point()  plot   plot + plt_theme_map()"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_x.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: A black and white theme without major grid lines in the y axis — plt_theme_x","title":"ggplot2: A black and white theme without major grid lines in the y axis — plt_theme_x","text":"theme minor grids axes major grid lines y axis.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: A black and white theme without major grid lines in the y axis — plt_theme_x","text":"","code":"plt_theme_x(base_size = 14, base_family = \"\", margin = 0.35)"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: A black and white theme without major grid lines in the y axis — plt_theme_x","text":"base_size numeric single value (default = 14), base font size margin numeric single value (default = 0.35), plot margin","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: A black and white theme without major grid lines in the y axis — plt_theme_x","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: A black and white theme without major grid lines in the y axis — plt_theme_x","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(hp,drat))+   geom_point()  plot   plot + plt_theme_x()"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: A black and white theme without minor grid lines — plt_theme_xy","title":"ggplot2: A black and white theme without minor grid lines — plt_theme_xy","text":"theme minor grids axes","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: A black and white theme without minor grid lines — plt_theme_xy","text":"","code":"plt_theme_xy(base_size = 14, base_family = \"\", margin = 0.35)"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_xy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: A black and white theme without minor grid lines — plt_theme_xy","text":"base_size numeric single value (default = 14), base font size margin numeric single value (default = 0.35), plot margin","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_xy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: A black and white theme without minor grid lines — plt_theme_xy","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_xy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: A black and white theme without minor grid lines — plt_theme_xy","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(hp,drat))+   geom_point()  plot   plot + plt_theme_xy()"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_y.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: A black and white theme without major grid lines in the x axis — plt_theme_y","title":"ggplot2: A black and white theme without major grid lines in the x axis — plt_theme_y","text":"theme minor grids axes major grid lines x axis.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: A black and white theme without major grid lines in the x axis — plt_theme_y","text":"","code":"plt_theme_y(base_size = 14, base_family = \"\", margin = 0.35)"},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: A black and white theme without major grid lines in the x axis — plt_theme_y","text":"base_size numeric single value (default = 14), base font size margin numeric single value (default = 0.35), plot margin","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: A black and white theme without major grid lines in the x axis — plt_theme_y","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_theme_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: A black and white theme without major grid lines in the x axis — plt_theme_y","text":"","code":"library(ggplot2)  plot <-   ggplot(mtcars,aes(hp,drat))+   geom_point()  plot   plot + plt_theme_y()"},{"path":"https://vbfelix.github.io/relper/reference/plt_water_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: Application of a watermark — plt_water_mark","title":"ggplot2: Application of a watermark — plt_water_mark","text":"Application watermark ggplot2 plot.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_water_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: Application of a watermark — plt_water_mark","text":"","code":"plt_water_mark(obj)"},{"path":"https://vbfelix.github.io/relper/reference/plt_water_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: Application of a watermark — plt_water_mark","text":"obj name R object watermark array","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_water_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: Application of a watermark — plt_water_mark","text":"ggplot2 object.","code":""},{"path":"https://vbfelix.github.io/relper/reference/plt_water_mark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2: Application of a watermark — plt_water_mark","text":"","code":"library(ggplot2)  ggplot(mtcars)+ plt_water_mark(vfx_watermark)"},{"path":"https://vbfelix.github.io/relper/reference/row_number_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a rank given unique values from a variable — row_number_unique","title":"Create a rank given unique values from a variable — row_number_unique","text":"Get row number unique values.","code":""},{"path":"https://vbfelix.github.io/relper/reference/row_number_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a rank given unique values from a variable — row_number_unique","text":"","code":"row_number_unique(x)"},{"path":"https://vbfelix.github.io/relper/reference/row_number_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a rank given unique values from a variable — row_number_unique","text":"x  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/row_number_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a rank given unique values from a variable — row_number_unique","text":"numeric vector rank, given unique values argument 'x'.","code":""},{"path":"https://vbfelix.github.io/relper/reference/row_number_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a rank given unique values from a variable — row_number_unique","text":"","code":"row_number_unique(mtcars$gear) #>  [1] 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3"},{"path":"https://vbfelix.github.io/relper/reference/rpearson.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate two variables linear correlated — rpearson","title":"Generate two variables linear correlated — rpearson","text":"Simulates two numeric variables linear correlated,  given Pearson linear correlation coefficient, also follows normal distribution.","code":""},{"path":"https://vbfelix.github.io/relper/reference/rpearson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate two variables linear correlated — rpearson","text":"","code":"rpearson(n = 25, pearson = 0.5, tol = 0.1, mean = 0, sd = 1)"},{"path":"https://vbfelix.github.io/relper/reference/rpearson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate two variables linear correlated — rpearson","text":"n numeric integer single value (default = 25), number observations simulate pearson numeric single value (default = 0.50), expected Pearson linear correlation coefficient tol numeric single value (default = 0.10), tolerance simulated estimated correlation mean numeric single value (default = 0), mean simulated data sd numeric single value (default = 1), standard deviation simulated data","code":""},{"path":"https://vbfelix.github.io/relper/reference/rpearson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate two variables linear correlated — rpearson","text":"tibble (nx2) two numeric variables (x y).","code":""},{"path":"https://vbfelix.github.io/relper/reference/rpearson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate two variables linear correlated — rpearson","text":"","code":"df <- rpearson(n = 100, pearson = .8, mean = 3) #> 100 observations of x and y were simulated with:  #>  - Mean = 3  #>  - SD = 1  #>  - Linear correlation coefficient = 0.8  #>  - Simulation tolerance =  0.1  #>  Resulting in a linear correlation coefficient = 0.7454434   head(df) #> # A tibble: 6 × 2 #>       x     y #>   <dbl> <dbl> #> 1  2.92  2.78 #> 2  4.48  3.45 #> 3  3.30  2.92 #> 4  1.98  1.68 #> 5  5.41  4.78 #> 6  3.42  2.50  plot(df)"},{"path":"https://vbfelix.github.io/relper/reference/stat_two_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary table for comparative analysis between two categorical variables — stat_two_cat","title":"Summary table for comparative analysis between two categorical variables — stat_two_cat","text":"Create frequency table chi-square statistic, p-value, cramer's v.","code":""},{"path":"https://vbfelix.github.io/relper/reference/stat_two_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary table for comparative analysis between two categorical variables — stat_two_cat","text":"","code":"stat_two_cat(df, grp_var, vars, filter = \"\")"},{"path":"https://vbfelix.github.io/relper/reference/stat_two_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary table for comparative analysis between two categorical variables — stat_two_cat","text":"df single data.frame grp_var character variable data.frame vars One variables data.frame filter character single value (default = ''), value filter variables","code":""},{"path":"https://vbfelix.github.io/relper/reference/stat_two_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary table for comparative analysis between two categorical variables — stat_two_cat","text":"gt table.","code":""},{"path":"https://vbfelix.github.io/relper/reference/stat_two_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary table for comparative analysis between two categorical variables — stat_two_cat","text":"","code":"mtcars %>%  dplyr::mutate(vs = paste0(\"vs = \",vs)) %>%  stat_two_cat(grp_var = vs,vars = c(am,cyl)) #> Warning: All elements of `...` must be named. #> Did you want `data = -name`? #> Warning: Chi-squared approximation may be incorrect #> <div id=\"lqaafuekhq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>html { #>   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; #> } #>  #> #lqaafuekhq .gt_table { #>   display: table; #>   border-collapse: collapse; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #lqaafuekhq .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #lqaafuekhq .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 0; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #lqaafuekhq .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #lqaafuekhq .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #lqaafuekhq .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #lqaafuekhq .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #lqaafuekhq .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #lqaafuekhq .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #lqaafuekhq .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #lqaafuekhq .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #lqaafuekhq .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #lqaafuekhq .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #lqaafuekhq .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #lqaafuekhq .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #lqaafuekhq .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #lqaafuekhq .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #lqaafuekhq .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #lqaafuekhq .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #lqaafuekhq .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #lqaafuekhq .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-left: 4px; #>   padding-right: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #lqaafuekhq .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #lqaafuekhq .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #lqaafuekhq .gt_left { #>   text-align: left; #> } #>  #> #lqaafuekhq .gt_center { #>   text-align: center; #> } #>  #> #lqaafuekhq .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #lqaafuekhq .gt_font_normal { #>   font-weight: normal; #> } #>  #> #lqaafuekhq .gt_font_bold { #>   font-weight: bold; #> } #>  #> #lqaafuekhq .gt_font_italic { #>   font-style: italic; #> } #>  #> #lqaafuekhq .gt_super { #>   font-size: 65%; #> } #>  #> #lqaafuekhq .gt_footnote_marks { #>   font-style: italic; #>   font-weight: normal; #>   font-size: 75%; #>   vertical-align: 0.4em; #> } #>  #> #lqaafuekhq .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #lqaafuekhq .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #lqaafuekhq .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #lqaafuekhq .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #lqaafuekhq .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #lqaafuekhq .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\" style=\"table-layout: fixed;; width: 0px\"> #>   <colgroup> #>     <col style=\"width:120px;\"/> #>     <col style=\"width:70px;\"/> #>     <col style=\"width:70px;\"/> #>     <col style=\"width:70px;\"/> #>     <col style=\"width:100px;\"/> #>     <col style=\"width:70px;\"/> #>     <col style=\"width:90px;\"/> #>   <\/colgroup> #>    #>   <thead class=\"gt_col_headings\"> #>     <tr> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"\"><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Levels\">Levels<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"vs = 0\">vs = 0<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"vs = 1\">vs = 1<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Statistic\">Statistic<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"P-value\">P-value<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Cramer's V\">Cramer's V<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_center gt_stub\">am<\/th> #> <td headers=\"stub_1_1 value\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_1 vs = 0\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_1 vs = 1\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_1 statistic\" class=\"gt_row gt_center\">0.3475<\/td> #> <td headers=\"stub_1_1 p_value\" class=\"gt_row gt_center\">0.5555<\/td> #> <td headers=\"stub_1_1 cramers_v\" class=\"gt_row gt_center\">0.1042<\/td><\/tr> #>     <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_center gt_stub\"><\/th> #> <td headers=\"stub_1_2 value\" class=\"gt_row gt_center\">0<\/td> #> <td headers=\"stub_1_2 vs = 0\" class=\"gt_row gt_center\">66.67% (12/18)<\/td> #> <td headers=\"stub_1_2 vs = 1\" class=\"gt_row gt_center\">50.00% (7/14)<\/td> #> <td headers=\"stub_1_2 statistic\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_2 p_value\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_2 cramers_v\" class=\"gt_row gt_center\">-<\/td><\/tr> #>     <tr><th id=\"stub_1_3\" scope=\"row\" class=\"gt_row gt_center gt_stub\"><\/th> #> <td headers=\"stub_1_3 value\" class=\"gt_row gt_center\">1<\/td> #> <td headers=\"stub_1_3 vs = 0\" class=\"gt_row gt_center\">33.33% (6/18)<\/td> #> <td headers=\"stub_1_3 vs = 1\" class=\"gt_row gt_center\">50.00% (7/14)<\/td> #> <td headers=\"stub_1_3 statistic\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_3 p_value\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_3 cramers_v\" class=\"gt_row gt_center\">-<\/td><\/tr> #>     <tr><th id=\"stub_1_4\" scope=\"row\" class=\"gt_row gt_center gt_stub\">cyl<\/th> #> <td headers=\"stub_1_4 value\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_4 vs = 0\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_4 vs = 1\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_4 statistic\" class=\"gt_row gt_center\">21.3399<\/td> #> <td headers=\"stub_1_4 p_value\" class=\"gt_row gt_center\">&lt;0.001<\/td> #> <td headers=\"stub_1_4 cramers_v\" class=\"gt_row gt_center\">0.8166<\/td><\/tr> #>     <tr><th id=\"stub_1_5\" scope=\"row\" class=\"gt_row gt_center gt_stub\"><\/th> #> <td headers=\"stub_1_5 value\" class=\"gt_row gt_center\">4<\/td> #> <td headers=\"stub_1_5 vs = 0\" class=\"gt_row gt_center\">5.56% (1/18)<\/td> #> <td headers=\"stub_1_5 vs = 1\" class=\"gt_row gt_center\">71.43% (10/14)<\/td> #> <td headers=\"stub_1_5 statistic\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_5 p_value\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_5 cramers_v\" class=\"gt_row gt_center\">-<\/td><\/tr> #>     <tr><th id=\"stub_1_6\" scope=\"row\" class=\"gt_row gt_center gt_stub\"><\/th> #> <td headers=\"stub_1_6 value\" class=\"gt_row gt_center\">6<\/td> #> <td headers=\"stub_1_6 vs = 0\" class=\"gt_row gt_center\">16.67% (3/18)<\/td> #> <td headers=\"stub_1_6 vs = 1\" class=\"gt_row gt_center\">28.57% (4/14)<\/td> #> <td headers=\"stub_1_6 statistic\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_6 p_value\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_6 cramers_v\" class=\"gt_row gt_center\">-<\/td><\/tr> #>     <tr><th id=\"stub_1_7\" scope=\"row\" class=\"gt_row gt_center gt_stub\"><\/th> #> <td headers=\"stub_1_7 value\" class=\"gt_row gt_center\">8<\/td> #> <td headers=\"stub_1_7 vs = 0\" class=\"gt_row gt_center\">77.78% (14/18)<\/td> #> <td headers=\"stub_1_7 vs = 1\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_7 statistic\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_7 p_value\" class=\"gt_row gt_center\">-<\/td> #> <td headers=\"stub_1_7 cramers_v\" class=\"gt_row gt_center\">-<\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>"},{"path":"https://vbfelix.github.io/relper/reference/stat_two_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary table for comparative analysis between two numeric variables — stat_two_num","title":"Summary table for comparative analysis between two numeric variables — stat_two_num","text":"Create summary table t.test: statistic, p-value IC(95%).","code":""},{"path":"https://vbfelix.github.io/relper/reference/stat_two_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary table for comparative analysis between two numeric variables — stat_two_num","text":"","code":"stat_two_num(df, grp_var, num_vars, method = \"auto\")"},{"path":"https://vbfelix.github.io/relper/reference/stat_two_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary table for comparative analysis between two numeric variables — stat_two_num","text":"df single data.frame grp_var character variable data.frame num_vars One variables data.frame method Method summary test (default = 'auto')","code":""},{"path":"https://vbfelix.github.io/relper/reference/stat_two_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary table for comparative analysis between two numeric variables — stat_two_num","text":"gt table.","code":""},{"path":"https://vbfelix.github.io/relper/reference/stat_two_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary table for comparative analysis between two numeric variables — stat_two_num","text":"","code":"set.seed(123);df <-  data.frame(    grp_var = sample(paste(\"group\", letters[1:2]),size = 100,replace = TRUE),    num_var1 = rnorm(100),    num_var2 = rpois(100,2),    num_var3 = rexp(100,2),   num_var4 = abs(rnorm(100))  )  stat_two_num(df,grp_var,c(num_var1,num_var2,num_var3,num_var4),method = c(\"mean\",\"median\",\"median\",\"mean\")) #> Error in select(., {    {        num_vars    }}): could not find function \"select\""},{"path":"https://vbfelix.github.io/relper/reference/str_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove punctuation and/or accent from a string — str_clean","title":"Remove punctuation and/or accent from a string — str_clean","text":"Remove punctuation /accent string.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove punctuation and/or accent from a string — str_clean","text":"","code":"str_clean(string, remove_accent = TRUE, remove_punct = TRUE, sub_punct = \"\")"},{"path":"https://vbfelix.github.io/relper/reference/str_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove punctuation and/or accent from a string — str_clean","text":"string character vector remove_accent boolean value, TRUE function remove accent symbols string (default = TRUE) remove_punct boolean value, TRUE function remove punctuation symbols string (default = TRUE) sub_punct character single value (default = ''), replacement punctuation symbols","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove punctuation and/or accent from a string — str_clean","text":"character vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove punctuation and/or accent from a string — str_clean","text":"","code":"string <- \"a..;éâ...íõ\"  #remove only punctuation str_clean(string,remove_accent = FALSE,remove_punct = TRUE) #> [1] \"aéâíõ\"  #remove only accent str_clean(string,remove_accent = TRUE,remove_punct = FALSE) #> [1] \"a..;ea...io\"  #remove both str_clean(string) #> [1] \"aeaio\""},{"path":"https://vbfelix.github.io/relper/reference/str_keep.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep only a type of characters in a string — str_keep","title":"Keep only a type of characters in a string — str_keep","text":"Keep type characters string.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_keep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep only a type of characters in a string — str_keep","text":"","code":"str_keep(string, keep = \"text\")"},{"path":"https://vbfelix.github.io/relper/reference/str_keep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep only a type of characters in a string — str_keep","text":"string character vector keep character single value (default = 'text'), type character keep","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_keep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep only a type of characters in a string — str_keep","text":"character vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_keep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Keep only a type of characters in a string — str_keep","text":"argument 'keep' can one : 'text', 'number', 'special'.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_keep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep only a type of characters in a string — str_keep","text":"","code":"string <- \"1ABCF45Z89$$%#\"  str_keep(string,keep = \"text\") #> [1] \"ABCFZ\"  str_keep(string,keep = \"numbers\") #> [1] \"14589\"  str_keep(string,keep = \"special\") #> [1] \"$$%#\""},{"path":"https://vbfelix.github.io/relper/reference/str_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select parts of a string, given patterns — str_select","title":"Select parts of a string, given patterns — str_select","text":"Select parts string: , patterns.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select parts of a string, given patterns — str_select","text":"","code":"str_select(string, after = NULL, before = NULL)"},{"path":"https://vbfelix.github.io/relper/reference/str_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select parts of a string, given patterns — str_select","text":"string character vector character single value (default = NULL), pattern select character single value (default = NULL), pattern select ","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select parts of a string, given patterns — str_select","text":"character vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select parts of a string, given patterns — str_select","text":"","code":"string <- \"example text STRING1 TARGET STRING2 example text\"  #Select a string, before a pattern str_select(string,before = \"STRING2\") #> [1] \"example text STRING1 TARGET \"  #Select a string, after a pattern str_select(string,after = \"STRING1\") #> [1] \" TARGET STRING2 example text\"  #Select a string, between two patterns str_select(string,\"STRING1\",\"STRING2\") #> [1] \"TARGET\""},{"path":"https://vbfelix.github.io/relper/reference/str_to_abb.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert case of a string, without impacting abbreviations — str_to_abb","title":"Convert case of a string, without impacting abbreviations — str_to_abb","text":"Apply str_to_upper strings number characters lower \"n_abb\".","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_to_abb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert case of a string, without impacting abbreviations — str_to_abb","text":"","code":"str_to_abb(string, n_abb = 3)"},{"path":"https://vbfelix.github.io/relper/reference/str_to_abb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert case of a string, without impacting abbreviations — str_to_abb","text":"string character vector n_abb numeric integer single value (default = 3), number characters define abbreviation","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_to_abb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert case of a string, without impacting abbreviations — str_to_abb","text":"character vector.","code":""},{"path":"https://vbfelix.github.io/relper/reference/str_to_abb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert case of a string, without impacting abbreviations — str_to_abb","text":"","code":"string <- c(\"aaaaa\",\"bb\",\"ccc\",\"dddd\")  str_to_abb(string) #> [1] \"Aaaaa\" \"BB\"    \"CCC\"   \"Dddd\""},{"path":"https://vbfelix.github.io/relper/reference/summary_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of categorical variables — summary_cat","title":"Summary of categorical variables — summary_cat","text":"Summary statistics categoric variables.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of categorical variables — summary_cat","text":"","code":"summary_cat(x)"},{"path":"https://vbfelix.github.io/relper/reference/summary_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of categorical variables — summary_cat","text":"x character vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of categorical variables — summary_cat","text":"tibble : - n: number observations;  - na: number missing values;  - blank_space: number values blank (\"\");  - n_distinct: number distinct levels;  - mode: mode.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of categorical variables — summary_cat","text":"","code":"x <- c(sample(letters,100,re = T),NA)  x #>   [1] \"h\" \"a\" \"p\" \"v\" \"b\" \"h\" \"n\" \"l\" \"z\" \"h\" \"i\" \"h\" \"y\" \"i\" \"t\" \"a\" \"c\" \"h\" #>  [19] \"b\" \"a\" \"i\" \"w\" \"g\" \"m\" \"t\" \"n\" \"p\" \"g\" \"d\" \"m\" \"l\" \"y\" \"m\" \"t\" \"j\" \"i\" #>  [37] \"l\" \"h\" \"g\" \"y\" \"o\" \"s\" \"q\" \"k\" \"g\" \"s\" \"w\" \"z\" \"c\" \"f\" \"g\" \"d\" \"j\" \"q\" #>  [55] \"p\" \"h\" \"u\" \"c\" \"l\" \"u\" \"n\" \"e\" \"n\" \"f\" \"i\" \"a\" \"t\" \"n\" \"s\" \"e\" \"b\" \"a\" #>  [73] \"t\" \"d\" \"z\" \"z\" \"k\" \"e\" \"v\" \"d\" \"s\" \"c\" \"a\" \"g\" \"e\" \"w\" \"i\" \"y\" \"x\" \"q\" #>  [91] \"u\" \"e\" \"x\" \"l\" \"b\" \"v\" \"r\" \"d\" \"j\" \"o\" NA   summary_cat(x) #> # A tibble: 1 × 5 #>       n    na blank_space n_distinct mode  #>   <int> <int>       <int>      <int> <chr> #> 1   101     1           0         26 h"},{"path":"https://vbfelix.github.io/relper/reference/summary_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of a data.frame — summary_data","title":"Summary of a data.frame — summary_data","text":"Summary statistics data.frame, summary statistics categorical numeric variables.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of a data.frame — summary_data","text":"","code":"summary_data(df)"},{"path":"https://vbfelix.github.io/relper/reference/summary_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of a data.frame — summary_data","text":"df single data.frame","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of a data.frame — summary_data","text":"diagnostic data.frame.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of a data.frame — summary_data","text":"","code":"mtcars #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2  summary_data(mtcars) #> [1] \"11 numeric variables.\" #> # A tibble: 11 × 14 #>    var       n    na negative equal_…¹ posit…²   min    p25    p50    p75    max #>    <chr> <int> <int>    <int>    <int>   <int> <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #>  1 am       32     0        0       19      13  0      0      0      1      1    #>  2 carb     32     0        0        0      32  1      2      2      4      8    #>  3 cyl      32     0        0        0      32  4      4      6      8      8    #>  4 disp     32     0        0        0      32 71.1  121.   196.   326    472    #>  5 drat     32     0        0        0      32  2.76   3.08   3.70   3.92   4.93 #>  6 gear     32     0        0        0      32  3      3      4      4      5    #>  7 hp       32     0        0        0      32 52     96.5  123    180    335    #>  8 mpg      32     0        0        0      32 10.4   15.4   19.2   22.8   33.9  #>  9 qsec     32     0        0        0      32 14.5   16.9   17.7   18.9   22.9  #> 10 vs       32     0        0       18      14  0      0      0      1      1    #> 11 wt       32     0        0        0      32  1.51   2.58   3.32   3.61   5.42 #> # … with 3 more variables: mode <dbl>, mean <dbl>, cv <dbl>, and abbreviated #> #   variable names ¹​equal_zero, ²​positive #> [1] \"0 categoric variables.\""},{"path":"https://vbfelix.github.io/relper/reference/summary_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary  of numeric variables — summary_num","title":"Summary  of numeric variables — summary_num","text":"Summary statistics numeric variables.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary  of numeric variables — summary_num","text":"","code":"summary_num(x, minimal = FALSE)"},{"path":"https://vbfelix.github.io/relper/reference/summary_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary  of numeric variables — summary_num","text":"x numeric vector minimal boolean value, TRUE function return minimal version summary (default = FALSE)","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary  of numeric variables — summary_num","text":"tibble : - n: number observations;  - na: number missing values;  - negative: number negative values;  - equal_zero: number values equal zero;  - positive: number positive values;  - min: minimum;  - p25: first quartile;  - p50: second quartile (median);  - p75: third quartile;  - max: maximum;  - mode: peak density value;  - mean: mean;  - cv: coefficient variation.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary  of numeric variables — summary_num","text":"","code":"x <- c(rnorm(10),NA,10)  x #>  [1] -2.2249877  1.2356935 -1.2410445  0.4547693  0.6599026 -0.1998898 #>  [7] -0.6451140  0.1653210  0.4388187  0.8833028         NA 10.0000000  summary_num(x) #> # A tibble: 1 × 13 #>       n    na negat…¹ equal…² posit…³   min    p25   p50   p75   max  mode  mean #>   <int> <int>   <int>   <int>   <int> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    12     1       4       0       7 -2.22 -0.423 0.439 0.772    10 0.481 0.866 #> # … with 1 more variable: cv <dbl>, and abbreviated variable names ¹​negative, #> #   ²​equal_zero, ³​positive"},{"path":"https://vbfelix.github.io/relper/reference/summary_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of sequence of values — summary_seq","title":"Summary of sequence of values — summary_seq","text":"Summary repeated values sequence.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of sequence of values — summary_seq","text":"","code":"summary_seq(x)"},{"path":"https://vbfelix.github.io/relper/reference/summary_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of sequence of values — summary_seq","text":"x  vector","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of sequence of values — summary_seq","text":"tibble values respective number values repeated sequence.","code":""},{"path":"https://vbfelix.github.io/relper/reference/summary_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of sequence of values — summary_seq","text":"","code":"x <- c(1, 1, 1, 2, 2, 2, 2, 3, 4, 5, 6, 7, 1, 1)  summary_seq(x) #> # A tibble: 8 × 2 #>   value num_rep #>   <dbl>   <int> #> 1     1       3 #> 2     2       4 #> 3     3       1 #> 4     4       1 #> 5     5       1 #> 6     6       1 #> 7     7       1 #> 8     1       2"},{"path":"https://vbfelix.github.io/relper/news/index.html","id":"relper-110","dir":"Changelog","previous_headings":"","what":"relper 1.1.0","title":"relper 1.1.0","text":"Changed str_to_abb argument n_char n_abb.","code":""},{"path":"https://vbfelix.github.io/relper/news/index.html","id":"relper-101","dir":"Changelog","previous_headings":"","what":"relper 1.0.1","title":"relper 1.0.1","text":"Added vignettes.","code":""},{"path":"https://vbfelix.github.io/relper/news/index.html","id":"relper-100","dir":"Changelog","previous_headings":"","what":"relper 1.0.0","title":"relper 1.0.0","text":"Official release package refactoring.","code":""}]
